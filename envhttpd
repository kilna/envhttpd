#!/bin/sh

while read line; do
  case "$line" in
    '')         :;; # Do nothing with blank lines
    '#'*)       :;; # Do nothing with comment lines
    port=*)     ENVHTTPD_PORT="$(echo "$line" | cut -f2- -d=)";;
    include=*)  ENVHTTPD_INCLUDE="$(echo "$line" | cut -f2- -d=)";;
    exclude=*)  ENVHTTPD_EXCLUDE="$(echo "$line" | cut -f2- -d=)";;
    *)          echo "Bad envhttpd.conf config: $line" >&2; exit 1;;
  esac
done </etc/envhttpd.conf

ENVHTTPD_PORT="${ENVHTTPD_PORT:-8111}"
ENVHTTPD_INCLUDE="${ENVHTTPD_INCLUDE:-'*'}"
ENVHTTPD_EXCLUDE="${ENVHTTPD_EXCLUDE:-none}"

echo "port=$ENVHTTPD_PORT"
echo "include=$ENVHTTPD_INCLUDE"
echo "exclude=$ENVHTTPD_EXCLUDE"

if [ "$ENVHTTPD_TYPE" != 'text/plain' ]; then
  echo ".txt:$ENVHTTPD_TYPE" >>/etc/httpd.conf
fi

json_esc() {
  sed -e 's/\\/\\\\/g; s|/|\\/|g; s/"/\\"/g; s/\\t/\\t/g;
          s/\\n/\\n/g; s/\\r/\\r/g; s/\\f/\\f/g; s/\\b/\\b/g;'
}

clean() {
  sed -e 's|[^A-Za-z0-9_.,;:-]||g'
}

json='{'
while read var; do
  var="$(echo "$var" | cut -f1 -d=)" # Strip off value past =
  [ "$var" == json ] && continue
  include=0
  eval "case '$var' in $ENVHTTPD_EXCLUDE) : ;;
                       $ENVHTTPD_INCLUDE) include=1;; esac"
  if [ "$include" == 1 ]; then
    if [ "$json" == '{' ]; then comma=''; else comma=','; fi
    json="$(
      printf '%s%s\n  "%s": "%s"' \
             "$json" \
             "$comma" \
             "$(echo "$var" | json_esc)" \
             "$(eval "echo \"\${$var}\"" | json_esc)"
    )"
    mkdir -p "$(echo "$var" | clean)"
    eval "echo \"\${$var}\" >\"$(echo "$var" | clean)/index.txt\""
  fi
done <<EOT
$(env)
EOT
json="$(printf '%s\n}\n\n' "$json")"

echo "$json"
echo "$json" >index.txt

unset json

exec /sbin/httpd -f -v -p $ENVHTTPD_PORT -c /etc/httpd.conf

